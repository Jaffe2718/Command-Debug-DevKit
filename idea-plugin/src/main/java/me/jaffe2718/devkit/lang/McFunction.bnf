{
    parserClass="me.jaffe2718.devkit.lang.parser.McFunctionParser"
  parserUtilClass="me.jaffe2718.devkit.lang.parser.McFunctionParserUtil"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="McFunction"
    psiImplClassSuffix="Impl"
    psiPackage="me.jaffe2718.devkit.lang.psi"
    psiImplPackage="me.jaffe2718.devkit.lang.psi.impl"

    elementTypeHolderClass="me.jaffe2718.devkit.lang.psi.McFunctionTypes"
    elementTypeClass="me.jaffe2718.devkit.lang.psi.McFunctionElementType"
    tokenTypeClass="me.jaffe2718.devkit.lang.psi.McFunctionTokenType"

}

mcFunctionFile ::= item_*

private item_ ::= (COMMAND|COMMENT|CRLF)

COMMAND ::= (COMMAND_NAME ARGUMENT*)
ARGUMENT ::= (REF|IDENTIFIER_DOMAIN|IDENTIFIER|NBT|COMPLEX_ELE|UUID|RANGE|STRING|NUMBER|ELEMENT|OPERATOR) | EX_SYNTAX
/*
EX_SYNTAX is for
*/

REF ::= SELECTOR ("["TAG ARGUMENT {"," TAG ARGUMENT}* "]")?
IDENTIFIER ::= NAMESPACE (COMPLEX_ELE|ELEMENT) NBT?
IDENTIFIER_DOMAIN ::= "#" IDENTIFIER

COMPLEX_ELE ::= (ELEMENT|UUID) ("." (ELEMENT|UUID|NUMBER))+   // complex element like obj.attr1.attr2 .......

NBT_PAIR ::= (NAMESPACE NBT_VALUE) | (STRING ":" NBT_VALUE)
NBT_LIST ::= "[" (NBT|STRING) ("," (NBT|STRING))* ","? "]" | EMPTY_LIST
NBT_VALUE ::= (STRING|NUMBER|ELEMENT|UUID|NBT|NBT_LIST|COMPLEX_ELE)
NBT ::= "{" NBT_PAIR {"," NBT_PAIR}* "}" | EMPTY_NBT
//SYMBS_SET ::= ("{" | "[" | "(" | "}" | "]" | ")" | "," | ":" | "=" | "^" | "~" | "@" | "#")
/*
STRING "string"
NUMBER 123 ~123 123.456 ~123.456 ^123.456 ^~123.456
REF @a @e @p @r @s
IDENTIFIER namespace:element element
NBT {nbt}
*/